name: Release on Tags

on:
    push:
        tags:
            - v*  # Push events to matching v*, i.e. v1.0, v20.15.10

permissions:
    contents: write
    packages: write

jobs:
    build-and-release:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.x'

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install setuptools wheel twine

            - name: Extract tag name
              id: tag
              run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

            - name: Build and package
              run: |
                  python setup.py sdist bdist_wheel

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ env.TAG_NAME }}
                  release_name: Release ${{ env.TAG_NAME }}
                  draft: false
                  prerelease: false

            - name: Upload Release Assets
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./dist/*
                  asset_name: pySQLY-${{ env.TAG_NAME }}.tar.gz
                  asset_content_type: application/gzip

